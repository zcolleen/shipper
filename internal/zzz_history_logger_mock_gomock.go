// Code generated by MockGen. DO NOT EDIT.
// Source: ./historyLogger.go
//
// Generated by this command:
//
//	mockgen -mock_names historyLogger=MockHistoryLoggerGomock -typed -package internal -destination zzz_history_logger_mock_gomock.go --source ./historyLogger.go
//

// Package internal is a generated GoMock package.
package internal

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockHistoryLoggerGomock is a mock of historyLogger interface.
type MockHistoryLoggerGomock struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryLoggerGomockMockRecorder
}

// MockHistoryLoggerGomockMockRecorder is the mock recorder for MockHistoryLoggerGomock.
type MockHistoryLoggerGomockMockRecorder struct {
	mock *MockHistoryLoggerGomock
}

// NewMockHistoryLoggerGomock creates a new mock instance.
func NewMockHistoryLoggerGomock(ctrl *gomock.Controller) *MockHistoryLoggerGomock {
	mock := &MockHistoryLoggerGomock{ctrl: ctrl}
	mock.recorder = &MockHistoryLoggerGomockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryLoggerGomock) EXPECT() *MockHistoryLoggerGomockMockRecorder {
	return m.recorder
}

// Log mocks base method.
func (m *MockHistoryLoggerGomock) Log(s *Shipment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Log", s)
	ret0, _ := ret[0].(error)
	return ret0
}

// Log indicates an expected call of Log.
func (mr *MockHistoryLoggerGomockMockRecorder) Log(s any) *MockHistoryLoggerGomockLogCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Log", reflect.TypeOf((*MockHistoryLoggerGomock)(nil).Log), s)
	return &MockHistoryLoggerGomockLogCall{Call: call}
}

// MockHistoryLoggerGomockLogCall wrap *gomock.Call
type MockHistoryLoggerGomockLogCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockHistoryLoggerGomockLogCall) Return(arg0 error) *MockHistoryLoggerGomockLogCall {
	c.Call = c.Call.Return(arg0)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockHistoryLoggerGomockLogCall) Do(f func(*Shipment) error) *MockHistoryLoggerGomockLogCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockHistoryLoggerGomockLogCall) DoAndReturn(f func(*Shipment) error) *MockHistoryLoggerGomockLogCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
