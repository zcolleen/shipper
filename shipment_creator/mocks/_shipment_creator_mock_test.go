// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/zcolleen/shipper/shipment_creator (interfaces: ShipmentCreator)
//
// Generated by this command:
//
//	mockgen -typed -package shipment_creator -destination ./mocks/_shipment_creator_mock_test.go . ShipmentCreator
//

// Package shipment_creator is a generated GoMock package.
package shipment_creator

import (
	reflect "reflect"

	shipment_creator "github.com/zcolleen/shipper/shipment_creator"
	gomock "go.uber.org/mock/gomock"
)

// MockShipmentCreator is a mock of ShipmentCreator interface.
type MockShipmentCreator struct {
	ctrl     *gomock.Controller
	recorder *MockShipmentCreatorMockRecorder
}

// MockShipmentCreatorMockRecorder is the mock recorder for MockShipmentCreator.
type MockShipmentCreatorMockRecorder struct {
	mock *MockShipmentCreator
}

// NewMockShipmentCreator creates a new mock instance.
func NewMockShipmentCreator(ctrl *gomock.Controller) *MockShipmentCreator {
	mock := &MockShipmentCreator{ctrl: ctrl}
	mock.recorder = &MockShipmentCreatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShipmentCreator) EXPECT() *MockShipmentCreatorMockRecorder {
	return m.recorder
}

// CreateShipment mocks base method.
func (m *MockShipmentCreator) CreateShipment() (*shipment_creator.Shipment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateShipment")
	ret0, _ := ret[0].(*shipment_creator.Shipment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateShipment indicates an expected call of CreateShipment.
func (mr *MockShipmentCreatorMockRecorder) CreateShipment() *MockShipmentCreatorCreateShipmentCall {
	mr.mock.ctrl.T.Helper()
	call := mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateShipment", reflect.TypeOf((*MockShipmentCreator)(nil).CreateShipment))
	return &MockShipmentCreatorCreateShipmentCall{Call: call}
}

// MockShipmentCreatorCreateShipmentCall wrap *gomock.Call
type MockShipmentCreatorCreateShipmentCall struct {
	*gomock.Call
}

// Return rewrite *gomock.Call.Return
func (c *MockShipmentCreatorCreateShipmentCall) Return(arg0 *shipment_creator.Shipment, arg1 error) *MockShipmentCreatorCreateShipmentCall {
	c.Call = c.Call.Return(arg0, arg1)
	return c
}

// Do rewrite *gomock.Call.Do
func (c *MockShipmentCreatorCreateShipmentCall) Do(f func() (*shipment_creator.Shipment, error)) *MockShipmentCreatorCreateShipmentCall {
	c.Call = c.Call.Do(f)
	return c
}

// DoAndReturn rewrite *gomock.Call.DoAndReturn
func (c *MockShipmentCreatorCreateShipmentCall) DoAndReturn(f func() (*shipment_creator.Shipment, error)) *MockShipmentCreatorCreateShipmentCall {
	c.Call = c.Call.DoAndReturn(f)
	return c
}
